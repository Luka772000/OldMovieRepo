// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektFinal.Models;

namespace ProjektFinal.Migrations
{
    [DbContext(typeof(FilmContext))]
    [Migration("20211203133809_n")]
    partial class n
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjektFinal.Models.Actor", b =>
                {
                    b.Property<int>("ActorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActorName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("YearOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ActorID");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("ProjektFinal.Models.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Earnings")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("KucaID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("YearOfProduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FilmId");

                    b.HasIndex("KucaID");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("ProjektFinal.Models.ProductionHouse", b =>
                {
                    b.Property<int>("KucaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImeKuce")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("KucaID");

                    b.ToTable("ProductionHouses");
                });

            modelBuilder.Entity("ProjektFinal.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActorID")
                        .HasColumnType("int");

                    b.Property<int>("FilmID")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleID");

                    b.HasIndex("ActorID");

                    b.HasIndex("FilmID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ProjektFinal.Models.Film", b =>
                {
                    b.HasOne("ProjektFinal.Models.ProductionHouse", "ProductionHouse")
                        .WithMany("FilmDetails")
                        .HasForeignKey("KucaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionHouse");
                });

            modelBuilder.Entity("ProjektFinal.Models.Role", b =>
                {
                    b.HasOne("ProjektFinal.Models.Actor", "Actor")
                        .WithMany("Role")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektFinal.Models.Film", "Film")
                        .WithMany("Role")
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("ProjektFinal.Models.Actor", b =>
                {
                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProjektFinal.Models.Film", b =>
                {
                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProjektFinal.Models.ProductionHouse", b =>
                {
                    b.Navigation("FilmDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
